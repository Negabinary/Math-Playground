; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Justification",
"class": "AssumptionJustification",
"language": "GDScript",
"path": "res://src/proof_step/justifications/assumption_justification.gd"
}, {
"base": "Object",
"class": "ExprItem",
"language": "GDScript",
"path": "res://src/expr_item/expr_item.gd"
}, {
"base": "Node",
"class": "ExprItemBuilder",
"language": "GDScript",
"path": "res://src/expr_item/expr_item_builder.gd"
}, {
"base": "Control",
"class": "ExprItemEdit",
"language": "GDScript",
"path": "res://ui/components/ei_editor/expr_item_edit.gd"
}, {
"base": "Control",
"class": "ExprItemEditHelper",
"language": "GDScript",
"path": "res://ui/components/ei_editor/expr_item_edit_helper.gd"
}, {
"base": "LineEdit",
"class": "ExprItemEditHelperEdit",
"language": "GDScript",
"path": "res://ui/components/ei_editor/expr_item_edit_helper_edit.gd"
}, {
"base": "Node",
"class": "ExprItemLambdaHelper",
"language": "GDScript",
"path": "res://src/expr_item/helper_functions/expr_item_lambda_helper.gd"
}, {
"base": "Reference",
"class": "ExprItemTagHelper",
"language": "GDScript",
"path": "res://src/expr_item/helper_functions/expr_item_tag_helper.gd"
}, {
"base": "Object",
"class": "ExprItemType",
"language": "GDScript",
"path": "res://src/expr_item/expr_item_type.gd"
}, {
"base": "Reference",
"class": "ExprItemUnrollHelper",
"language": "GDScript",
"path": "res://src/expr_item/helper_functions/expr_item_unroll_helper.gd"
}, {
"base": "Reference",
"class": "Justification",
"language": "GDScript",
"path": "res://src/proof_step/justification.gd"
}, {
"base": "Node",
"class": "JustificationBuilder",
"language": "GDScript",
"path": "res://src/proof_step/justification_buider.gd"
}, {
"base": "Object",
"class": "Locator",
"language": "GDScript",
"path": "res://src/expr_item/locator.gd"
}, {
"base": "Object",
"class": "MathModule",
"language": "GDScript",
"path": "res://src/module/module.gd"
}, {
"base": "Justification",
"class": "MissingJustification",
"language": "GDScript",
"path": "res://src/proof_step/justifications/missing_justification.gd"
}, {
"base": "Reference",
"class": "ModuleDeserializer",
"language": "GDScript",
"path": "res://src/module/module_deserializer.gd"
}, {
"base": "Node",
"class": "ModuleItem",
"language": "GDScript",
"path": "res://src/module/module_item.gd"
}, {
"base": "ModuleItem",
"class": "ModuleItemAssumption",
"language": "GDScript",
"path": "res://src/module/module_item_assumption.gd"
}, {
"base": "ModuleItem",
"class": "ModuleItemDefinition",
"language": "GDScript",
"path": "res://src/module/module_item_definition.gd"
}, {
"base": "ModuleItem",
"class": "ModuleItemTheorem",
"language": "GDScript",
"path": "res://src/module/module_item_theorem.gd"
}, {
"base": "Node",
"class": "ModuleLoader",
"language": "GDScript",
"path": "res://src/module/module_loader.gd"
}, {
"base": "Reference",
"class": "ModuleSerializer",
"language": "GDScript",
"path": "res://src/module/module_serializer.gd"
}, {
"base": "Justification",
"class": "ModusPonensJustification",
"language": "GDScript",
"path": "res://src/proof_step/justifications/modus_ponens_justification.gd"
}, {
"base": "Container",
"class": "PageContainer",
"language": "GDScript",
"path": "res://ui/components/PageContainer.gd"
}, {
"base": "Object",
"class": "ProofBox",
"language": "GDScript",
"path": "res://src/proof_step/proof_box.gd"
}, {
"base": "Object",
"class": "ProofStep",
"language": "GDScript",
"path": "res://src/proof_step/proof_step.gd"
}, {
"base": "Justification",
"class": "RefineJustification",
"language": "GDScript",
"path": "res://src/proof_step/justifications/refine_justification.gd"
}, {
"base": "Node",
"class": "SelectionHandler",
"language": "GDScript",
"path": "res://ui/proof/SelectionHandler.gd"
}, {
"base": "Object",
"class": "Statement",
"language": "GDScript",
"path": "res://src/expr_item/helper_functions/statement.gd"
}, {
"base": "Object",
"class": "UniversalLocator",
"language": "GDScript",
"path": "res://src/expr_item/universal_locator.gd"
}, {
"base": "Justification",
"class": "VacuousJustification",
"language": "GDScript",
"path": "res://src/proof_step/justifications/vacuous_justification.gd"
}, {
"base": "VBoxContainer",
"class": "WPBParent",
"language": "GDScript",
"path": "res://ui/proof/written_proof_box/WPBParent.gd"
}, {
"base": "TextureButton",
"class": "WrittenJustification",
"language": "GDScript",
"path": "res://ui/proof/written_proof/written_justification.gd"
}, {
"base": "WPBParent",
"class": "WrittenProofBox",
"language": "GDScript",
"path": "res://ui/proof/written_proof_box/WrittenProofBox.gd"
}, {
"base": "Reference",
"class": "WrittenProofBoxBuilder",
"language": "GDScript",
"path": "res://ui/proof/written_proof_box/wp_box_builder.gd"
}, {
"base": "Control",
"class": "WrittenStatement",
"language": "GDScript",
"path": "res://ui/proof/written_proof/written_statement.gd"
} ]
_global_script_class_icons={
"AssumptionJustification": "",
"ExprItem": "",
"ExprItemBuilder": "",
"ExprItemEdit": "",
"ExprItemEditHelper": "",
"ExprItemEditHelperEdit": "",
"ExprItemLambdaHelper": "",
"ExprItemTagHelper": "",
"ExprItemType": "",
"ExprItemUnrollHelper": "",
"Justification": "",
"JustificationBuilder": "",
"Locator": "",
"MathModule": "",
"MissingJustification": "",
"ModuleDeserializer": "",
"ModuleItem": "",
"ModuleItemAssumption": "",
"ModuleItemDefinition": "",
"ModuleItemTheorem": "",
"ModuleLoader": "",
"ModuleSerializer": "",
"ModusPonensJustification": "",
"PageContainer": "",
"ProofBox": "",
"ProofStep": "",
"RefineJustification": "",
"SelectionHandler": "",
"Statement": "",
"UniversalLocator": "",
"VacuousJustification": "",
"WPBParent": "",
"WrittenJustification": "",
"WrittenProofBox": "",
"WrittenProofBoxBuilder": "",
"WrittenStatement": ""
}

[application]

config/name="DiscMath Playground"
run/main_scene="res://ui/Main.tscn"

[autoload]

GlobalTypes="*res://src/expr_item/global_types.gd"

[debug]

gdscript/warnings/unused_variable=false
gdscript/warnings/shadowed_variable=false
gdscript/warnings/unused_argument=false
gdscript/warnings/unused_signal=false
gdscript/warnings/return_value_discarded=false

[editor_plugins]

enabled=PoolStringArray( "gut", "zylann.project_stats" )

[gui]

theme/custom="res://ui/theme/main_theme.theme"
theme/custom_font="res://ui/theme/fonts/ui_font.tres"

[input]

ui_accept={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777221,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777222,"unicode":0,"echo":false,"script":null)
, Object(InputEventJoypadButton,"resource_local_to_scene":false,"resource_name":"","device":0,"button_index":0,"pressure":0.0,"pressed":false,"script":null)
 ]
}
mouse_left={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":1,"pressed":false,"doubleclick":false,"script":null)
 ]
}
right_click={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":2,"pressed":false,"doubleclick":false,"script":null)
 ]
}
backspace={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777220,"unicode":0,"echo":false,"script":null)
 ]
}
ui_open={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":true,"control":false,"meta":false,"command":false,"pressed":false,"scancode":57,"unicode":0,"echo":false,"script":null)
 ]
}
ui_close={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":true,"control":false,"meta":false,"command":false,"pressed":false,"scancode":48,"unicode":0,"echo":false,"script":null)
 ]
}
close={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":true,"control":false,"meta":false,"command":false,"pressed":false,"scancode":48,"unicode":0,"echo":false,"script":null)
 ]
}
comma={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":44,"unicode":0,"echo":false,"script":null)
 ]
}

[rendering]

quality/driver/driver_name="GLES2"
environment/default_clear_color=Color( 1, 1, 1, 1 )
