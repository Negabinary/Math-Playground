[gd_scene load_steps=3 format=2]

[ext_resource path="res://ui/theme/fonts/expr_item_font.tres" type="DynamicFont" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends VSplitContainer

func _on_TextEdit_breakpoint_toggled(line:int):
	var x = Parser2.make_module(\"Test\", $TextEdit.text)
	if x.error:
		move_cursor_to_char(x.token.from_char)
	print(x)
	$TextEdit2.text = ModuleSerializer.serialize(x.module)

func move_cursor_to_char(chr:int):
	$TextEdit.cursor_set_line(0)
	print(chr)
	while chr > len($TextEdit.get_line($TextEdit.cursor_get_line())):
		print(chr)
		chr -= len($TextEdit.get_line($TextEdit.cursor_get_line())) + 1
		$TextEdit.cursor_set_line($TextEdit.cursor_get_line() + 1)
	$TextEdit.cursor_set_column(chr)
"

[node name="VSplitContainer" type="VSplitContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextEdit" type="TextEdit" parent="."]
margin_right = 1024.0
margin_bottom = 294.0
size_flags_vertical = 3
custom_fonts/font = ExtResource( 1 )
text = "define 0
define S
define Nat x =
	forall P. 
		if P(0) 
		then if (forall y. if P(y) then P(S(y))) 
		then P(x)
show 0 : Nat
show S : Nat -> Nat
"
show_line_numbers = true
breakpoint_gutter = true

[node name="TextEdit2" type="TextEdit" parent="."]
margin_top = 306.0
margin_right = 1024.0
margin_bottom = 600.0
size_flags_vertical = 3
show_line_numbers = true
[connection signal="breakpoint_toggled" from="TextEdit" to="." method="_on_TextEdit_breakpoint_toggled"]
